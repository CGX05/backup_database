name: backup_database
on:
  push:
    branches: [ master ]  # 当master分支有推送时触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 拉取代码
      uses: actions/checkout@v4

    - name: 安装sshpass
      run: sudo apt-get install -y sshpass

    - name: 部署到服务器
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
      run: |
        # 1. 使用 scp 将代码从 GitHub Actions 的 runner 复制到你的服务器
        echo "开始上传代码..."
        sshpass -p "$SERVER_PASSWORD" scp -o StrictHostKeyChecking=no -r ./* $SERVER_USER@$SERVER_HOST:/home/python-app/
        echo "代码上传完成！"

        # 2. 连接到服务器执行后续命令
        sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
          set -e
          cd /home/python-app


          # 确保Python和虚拟环境工具已安装
          sudo apt-get update && sudo apt-get install -y python3 python3-venv

          # 创建并激活虚拟环境
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          source venv/bin/activate

          # 安装依赖
          pip install --upgrade pip
          pip install -r requirements.txt

          # 生成config.env文件
          cat > config.env << ENV_EOF
          MYSQL_PASSWORD=${{ secrets.DATABASE_KYE }}
          ENV_EOF
          chmod 600 config.env

          # 停止旧进程
          pkill -f "venv/bin/python main.py" || true

          # 启动应用
          nohup venv/bin/python main.py > app.log 2>&1 &

          echo "应用部署完成！"
        EOF
