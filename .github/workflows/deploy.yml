name: backup_database
on:
  push:
    branches: [ master ]  # 当master分支有推送时触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 拉取代码
      uses: actions/checkout@v4

    - name: 安装sshpass
      run: sudo apt-get install -y sshpass

    - name: 部署到服务器
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
      run: |
        # 使用sshpass通过密码连接服务器并执行部署命令
        sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
          set -e  # 遇到错误立即停止执行
          
          # 项目目录
          PROJECT_DIR="/home/python-app"
          
          # 创建项目目录（如果不存在）
          mkdir -p $PROJECT_DIR
          cd $PROJECT_DIR || exit 1
          
          # 拉取最新代码
          if [ -d ".git" ]; then
            git pull origin master
          else
            git clone ${{ github.repositoryUrl }} .
            git checkout main
          fi
          
          # 确保Python和虚拟环境工具已安装
          sudo apt-get update && sudo apt-get install -y python3 python3-venv
          
          # 创建并激活虚拟环境
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          source venv/bin/activate
          
          # 安装依赖
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # 生成config.env文件
          cat > config.env << ENV_EOF
          # 环境变量配置
          MYSQL_PASSWORD=${{ secrets.DATABASE_KYE }}
          ENV_EOF
          
          # 赋予适当权限
          chmod 600 config.env
          
          # 停止旧进程
          pkill -f "venv/bin/python main.py" || true
          
          # 启动应用
          nohup venv/bin/python main.py > app.log 2>&1 &
          
          echo "应用部署完成！"
        EOF
